openapi: 3.0.3
info:
  title: uav_for_rent
  version: 1.0.0
  description: UAV Rent Api
paths:
  /api/brand/:
    get:
      operationId: api_brand_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brand'
          description: ''
    post:
      operationId: api_brand_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Brand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Brand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Brand'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
  /api/brand/{id}/:
    get:
      operationId: api_brand_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
    put:
      operationId: api_brand_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Brand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Brand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Brand'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
    patch:
      operationId: api_brand_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBrand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBrand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBrand'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
    delete:
      operationId: api_brand_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/model/:
    get:
      operationId: api_model_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Model'
          description: ''
    post:
      operationId: api_model_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Model'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Model'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: ''
  /api/model/{id}/:
    get:
      operationId: api_model_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this model.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: ''
    put:
      operationId: api_model_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this model.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Model'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Model'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: ''
    patch:
      operationId: api_model_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this model.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedModel'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: ''
    delete:
      operationId: api_model_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this model.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/uav/:
    get:
      operationId: api_uav_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UAV'
          description: ''
    post:
      operationId: api_uav_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UAV'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UAV'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UAV'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UAV'
          description: ''
  /api/uav/{id}/:
    get:
      operationId: api_uav_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this uav.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UAV'
          description: ''
    put:
      operationId: api_uav_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this uav.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UAV'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UAV'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UAV'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UAV'
          description: ''
    patch:
      operationId: api_uav_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this uav.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUAV'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUAV'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUAV'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UAV'
          description: ''
    delete:
      operationId: api_uav_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this uav.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Brand:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 64
        uav:
          type: integer
        founded_at:
          type: string
          format: date
      required:
      - founded_at
      - id
      - name
      - uav
    ColorEnum:
      enum:
      - BU
      - RD
      - GR
      - WT
      type: string
    Model:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 64
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - updated_at
    PatchedBrand:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 64
        uav:
          type: integer
        founded_at:
          type: string
          format: date
    PatchedModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 64
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedUAV:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 64
        model:
          type: integer
        weight:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        color:
          $ref: '#/components/schemas/ColorEnum'
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    UAV:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 64
        model:
          type: integer
        weight:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        color:
          $ref: '#/components/schemas/ColorEnum'
      required:
      - id
      - model
      - name
      - weight
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
